definitions:
    services:
      docker:
        memory: 7124
        
image:
  name: atlassian/pipelines-awscli:1.18.190

options:
  docker: true

definitions:
  checkRepo: &checkRepo
    name: Check & create repo
    script:
      - REPO=$(aws ecr describe-repositories --region eu-west-1 --query "repositories[?repositoryName=='${BITBUCKET_REPO_SLUG}'].repositoryName" --output text)
      - if [[ -z $REPO ]]; then aws ecr create-repository --region eu-west-1 --repository-name $BITBUCKET_REPO_SLUG; fi

  buildPush: &buildPushTag
    name: Build & Push
    caches:
      - docker
    services:
      - docker
    script:
      - export IMAGE_NAME=$CWH_ECR/$BITBUCKET_REPO_SLUG
      - export IMAGE_NAME_TAG=$IMAGE_NAME:$BITBUCKET_TAG
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $CWH_ECR
      - docker build --memory 5G  --memory-swap 7G -t api-$IMAGE_NAME_TAG -f apps/api/Dockerfile-prod .
      - docker push api-$IMAGE_NAME_TAG
      - docker build -t iverify-$IMAGE_NAME_TAG -f apps/iverify/Dockerfile  .
      - docker push iverify-$IMAGE_NAME_TAG
      - docker build -t triage-$IMAGE_NAME_TAG -f apps/triage/Dockerfile-prod .
      - docker push triage-$IMAGE_NAME_TAG
      - docker build -t publisher-$IMAGE_NAME_TAG -f apps/publisher/Dockerfile-prod .
      - docker push publisher-$IMAGE_NAME_TAG
  iverifybuild: &iverifybuild
    name: Build Iverify
    image:
        name: node:14.17.1 
    caches:
      - docker
    services:
      - docker
    script:
      - export IMAGE_NAME=$CWH_ECR/$BITBUCKET_REPO_SLUG
      - export IMAGE_NAME_TAG=$IMAGE_NAME:$BITBUCKET_TAG
      - npm install npm@latest -g
      - apt-get update 
      - apt-get install -y libgtk2.0-0   libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 xvfb
      - cd apps/iverify
      - npm install
      - npm install font-awesome
      - export PATH=node_modules/.bin:$PATH
      - npm install -g @angular/cli
      - ng build iverify --configuration=production
      - cd ../triage && npm install && nx build triage
      - cd ../publisher && npm install && nx build publisher
    artifacts: 
      - dist/**

  build: &build
    name: Build
    caches:
      - docker
    services:
      - docker
    script:


pipelines:
  tags:
    '*':
      - step: 
          *checkRepo
      - step: 
          size: 2x
          services:
            - docker
          <<: *iverifybuild
      - step: 
          size: 2x
          services:
            - docker
          <<: *buildPushTag


