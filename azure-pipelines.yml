variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'docker-depoyment') }}: 
    - name: azureContainerRegistryName
      value: iverify
    - name: k8s_service_connection
      value: iverify-js
    - name: dockerImage
      value: iverify
    - name: value_file_url
      value: deploy/prod
steps:
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: $(azureContainerRegistryName)
  - task: Docker@2
    displayName: Build and Push iverify
    inputs:
      command: buildAndPush
      repository: $(dockerImage)-js
      Dockerfile: apps/iverify/Dockerfile
      buildContext: $(Build.Repository.LocalPath)
      tags: |
        $(dockerImage)-iverify-$(Build.SourceVersion)
  - task: Docker@2
    displayName: Build and Push publisher
    inputs:
      command: buildAndPush
      repository: $(dockerImage)-js
      Dockerfile: apps/publisher/Dockerfile-prod
      buildContext: $(Build.Repository.LocalPath)
      tags: |
        $(dockerImage)-publisher-$(Build.SourceVersion)
  - task: Docker@2
    displayName: Build and Push triage
    inputs:
      command: buildAndPush
      repository: $(dockerImage)-js
      Dockerfile: apps/triage/Dockerfile-prod
      buildContext: $(Build.Repository.LocalPath)
      tags: |
        $(dockerImage)-triage-$(Build.SourceVersion)
  - task: Docker@2
    displayName: Build and Push API
    inputs:
      command: buildAndPush
      repository: $(dockerImage)-js
      Dockerfile: apps/api/Dockerfile-prod
      buildContext: $(Build.Repository.LocalPath)
      tags: |
        $(dockerImage)-api-$(Build.SourceVersion)
  - task: HelmDeploy@0
    displayName: Helm deploy iverify
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: $(k8s_service_connection)
      namespace: $(dockerImage)-js
      command: upgrade
      arguments: -i --set image=$(azureContainerRegistryName).azurecr.io/$(dockerImage)-js:$(dockerImage)-iverify-$(Build.SourceVersion)
      chartType: 'FilePath'
      releaseName: iverify
      chartPath: deploy/app 
      valueFile: $(value_file_url)/iverify-values.yaml
  - task: HelmDeploy@0
    displayName: Helm deploy publisher
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: $(k8s_service_connection)
      namespace: $(dockerImage)-js
      command: upgrade
      arguments: -i --set image=$(azureContainerRegistryName).azurecr.io/$(dockerImage)-js:$(dockerImage)-publisher-$(Build.SourceVersion)
      chartType: 'FilePath'
      releaseName: publisher
      chartPath: deploy/app 
      valueFile: $(value_file_url)/publisher-values.yaml
  - task: HelmDeploy@0
    displayName: Helm deploy triage
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: $(k8s_service_connection)
      namespace: $(dockerImage)-js
      command: upgrade
      arguments: -i --set image=$(azureContainerRegistryName).azurecr.io/$(dockerImage)-js:$(dockerImage)-triage-$(Build.SourceVersion)
      chartType: 'FilePath'
      releaseName: triage
      chartPath: deploy/app 
      valueFile: $(value_file_url)/triage-values.yaml
  - task: HelmDeploy@0
    displayName: Helm deploy api
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: $(k8s_service_connection)
      namespace: $(dockerImage)-js
      command: upgrade
      arguments: -i --set image=$(azureContainerRegistryName).azurecr.io/$(dockerImage)-js:$(dockerImage)-api-$(Build.SourceVersion)
      chartType: 'FilePath'
      releaseName: api
      chartPath: deploy/app 
      valueFile: $(value_file_url)/api-values.yaml